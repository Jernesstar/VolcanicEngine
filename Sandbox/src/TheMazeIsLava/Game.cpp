#include "Game.h"

namespace TheMazeIsLava {

Game::Game() {
	Reset();
}

void Game::OnUpdate(TimeStep ts) {
	
	// m_Levels[m_CurrentLevel].Render(ts);
}

void Game::Reset() {
	m_Levels.push_back(std::vector<std::vector<uint32_t>>
	{
		[0, 0, 0, 0, 0, 0, 0, 0, 3, 0],
		[0, 0, 2, 0, 1, 1, 1, 0, 1, 0],
		[0, 1, 1, 0, 1, 0, 1, 1, 1, 0],
		[0, 1, 0, 0, 1, 0, 0, 0, 0, 0],
		[0, 1, 1, 1, 1, 1, 1, 1, 1, 0],
		[0, 0, 0, 0, 1, 1, 0, 0, 2, 0],
		[0, 0, 0, 0, 0, 1, 0, 1, 1, 0],
		[0, 1, 1, 1, 0, 1, 0, 1, 0, 0],
		[0, 2, 0, 1, 1, 1, 0, 1, 2, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	}, float [](float duration) { return 8.0f });
	m_Levels.push_back(std::vector<std::vector<uint32_t>>
	{
		[0, 0, 0, 0, 0, 0, 0, 0, 3, 0],
		[0, 0, 1, 1, 1, 1, 1, 0, 1, 0],
		[0, 0, 1, 0, 0, 0, 1, 0, 1, 0],
		[0, 0, 1, 0, 2, 0, 1, 0, 1, 0],
		[0, 0, 1, 0, 1, 0, 1, 0, 1, 0],
		[0, 0, 1, 0, 1, 0, 1, 0, 1, 0],
		[0, 0, 1, 0, 1, 1, 1, 0, 1, 0],
		[0, 0, 1, 0, 0, 0, 0, 0, 1, 0],
		[0, 0, 1, 1, 1, 1, 1, 1, 1, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	}, float [](float duration) { return 5.99f });
	m_Levels.push_back(std::vector<std::vector<uint32_t>>
	{
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
		[0, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 1, 1, 1, 1, 1, 1, 1, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
		[0, 1, 1, 1, 1, 1, 1, 1, 1, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 1, 1, 1, 1, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 2, 0, 0, 0, 0],
	}, float [](float duration) { return 5.85f });
}

void Game::Play() {

}

void Game::Pause() {

}

}